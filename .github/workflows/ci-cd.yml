name: CI/CD

on:
  push:
    branches: ['main']
    tags: ['v*']

jobs:
  test-linux:
    name: Test (Linux)
    strategy:
      matrix:
        pyver: ['3.10', '3.11', '3.12', '3.13']
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Setup python ${{ matrix.pyver }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyver }}
    - name: Install dependencies
      run: python -m pip install --upgrade setuptools Cython build
    - name: Run tests
      run: make test
    - name: Build sdist
      if: ${{ matrix.pyver == '3.13' }}
      run: make sdist
    - name: Upload sdist
      if: ${{ matrix.pyver == '3.13' }}
      uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/pylibcue*.tar.gz

  test:
    name: Test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')
    needs: test-linux
    strategy:
      matrix:
        pyver: ['3.10', '3.11', '3.12', '3.13']
        os: ['windows', 'macos']
        exclude: # python/cpython/pull/100137
        - os: 'windows'
          pyver: '3.10'
        - os: 'windows'
          pyver: '3.11'
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Download sdist
      uses: actions/download-artifact@v5
    - name: Extract sdist
      shell: bash
      run: tar xzf pylibcue*.tar.gz --strip-components=1
    - name: Setup Python ${{ matrix.pyver }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.pyver }}
    - name: Install dependencies
      run: python -m pip install --upgrade setuptools Cython
    - name: Config distutils for MinGW
      if: ${{ matrix.os == 'windows' }}
      run: Set-Content -Path "$env:USERPROFILE\pydistutils.cfg" -Value "[build]`ncompiler=mingw32"
    - name: Run tests
      run: make test
